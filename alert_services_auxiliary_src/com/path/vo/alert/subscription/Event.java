package com.path.vo.alert.subscription;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlElement;

import java.util.ArrayList;
import java.util.List;
import com.path.vo.alert.subscription.CommunicationMode;
import javax.xml.bind.annotation.XmlType;

/**
 * @AutoGenerated Code
 * @description class Event
 */

@XmlType(propOrder={})
public class Event 
{
	private BigDecimal eventId;
	private String eventType;
	private String eventDescription;
	private String eventStatus;
	private List<CommunicationMode> communicationModesList = new ArrayList<CommunicationMode>();
	private String sourceOfContact;
	private List<Account> excludedAccountsList = new ArrayList<Account>();

	public void setEventId(BigDecimal eventId)
	{
	   this.eventId = eventId;
	}
	public BigDecimal getEventId()
	{
	   return eventId;
	}
	public void setEventType(String eventType)
	{
	   this.eventType = eventType;
	}
	public String getEventType()
	{
	   return eventType;
	}
	public void setEventDescription(String eventDescription)
	{
	   this.eventDescription = eventDescription;
	}
	public String getEventDescription()
	{
	   return eventDescription;
	}
	public void setEventStatus(String eventStatus)
	{
	   this.eventStatus = eventStatus;
	}
	public String getEventStatus()
	{
	   return eventStatus;
	}
	public void setCommunicationModesList(List<CommunicationMode> communicationModesList)
	{
	   this.communicationModesList = communicationModesList;
	}
	@XmlElementWrapper(name = "communicationModesList")
  	@XmlElement(name = "communicationMode")
	public List<CommunicationMode> getCommunicationModesList()
	{
	   return communicationModesList;
	}
	public void setSourceOfContact(String sourceOfContact)
	{
	   this.sourceOfContact = sourceOfContact;
	}
	public String getSourceOfContact()
	{
	   return sourceOfContact;
	}
	public void setExcludedAccountsList(List<Account> excludedAccountsList)
	{
	   this.excludedAccountsList = excludedAccountsList;
	}
	@XmlElementWrapper(name = "excludedAccountsList")
  	@XmlElement(name = "account")
	public List<Account> getExcludedAccountsList()
	{
	   return excludedAccountsList;
	}
}
